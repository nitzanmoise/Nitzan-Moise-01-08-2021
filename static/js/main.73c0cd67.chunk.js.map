{"version":3,"sources":["components/NavBar.js","actions/weatherTypes.js","actions/weatherActions.js","components/Dailyforcast.js","containers/WeatherList.js","pages/Weather.js","containers/FavoritesList.js","pages/Favorites.js","App.js","reducers/weatherReducer.js","reducers/rootReducer.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","barWeapper","display","justifyContent","NavBar","classes","className","AppBar","position","Toolbar","to","Button","FETCH_WEATHER_REQUEST","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","FETCH_CITY_REQUEST","FETCH_CITY_SUCCESS","FETCH_CITY_FAILURE","FETCH_WEEEKLY_REQUEST","FETCH_WEEKLY_SUCCESS","FETCH_WEEKLY_FAILURE","UPDATE_CURRENT_LOCATION","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","key","fetchCity","city","query","dispatch","fetchCityRequest","fetch","then","response","json","data","stringyCity","JSON","stringify","localStorage","setItem","fetchCitySuccess","fetchWeather","Key","catch","error","fetchCityFailure","message","id","fetchWeatherRequest","weather","stringyWeather","fetchWeatherSuccess","fetchWeeklyWeather","fetchWeatherFailure","fetchWeeklyWeatherRequest","stringyWeeklyWeather","fetchWeeklyWeatherSuccess","updateCurrLocation","fetchWeeklyWeatherFailure","type","payload","cityStorage","parse","getItem","Weather","weatherStorage","wweeklyStorage","removeLocationFromFavorites","location","minWidth","width","margin","bullet","transform","fontSize","pos","marginBottom","Dailyforcast","day","index","useState","temprature","setTemprature","isCelius","setIsCelsius","weekday","setWeekday","dayOfWeek","fahrenheitToCelsius","fahrenheit","Math","floor","useEffect","degrees","Temperature","Maximum","Value","currDay","filter","item","i","Card","CardContent","Typography","color","gutterBottom","onClick","celsius","connect","state","wetherData","addToFavorites","addLocationToFavorites","removeFromFavorites","isFav","setIsFav","Grid","container","direction","alignItems","LocalizedName","currWeather","Metric","Unit","style","size","WeatherText","weeklyWeather","DailyForecasts","map","value","setValue","open","setOpen","handleChange","e","target","replace","xs","placeholder","name","onChange","Modal","onClose","favorites","length","loc","chooseFav","CardActions","console","log","removeLoc","Favorites","background","marginTop","bottom","link","App","React","path","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","inkBarStyle","initialState","loading","reducer","action","rootReducer","combineReducers","weatherReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73c0cd67.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Toolbar, Button, AppBar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  barWeapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.barWeapper}>\r\n          <Link to=\"/\">\r\n            <h3>Heoloweather</h3>\r\n          </Link>\r\n\r\n          <div>\r\n            <Link to=\"/\">\r\n              <Button>Weather</Button>\r\n            </Link>\r\n            <Link to=\"/favorites\">\r\n              <Button>Favorites</Button>\r\n            </Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","// Get\r\nexport const FETCH_WEATHER_REQUEST = \"FETCH_USERS_REQUEST\";\r\nexport const FETCH_WEATHER_SUCCESS = \"FETCH_USERS_SUCCESS\";\r\nexport const FETCH_WEATHER_FAILURE = \"FETCH_USERS_FAILURE\";\r\n\r\nexport const FETCH_CITY_REQUEST = \"FETCH_CITY_REQUEST\";\r\nexport const FETCH_CITY_SUCCESS = \"FETCH_CITY_SUCCESS\";\r\nexport const FETCH_CITY_FAILURE = \"FETCH_CITY_FAILURE\";\r\n\r\nexport const FETCH_WEEEKLY_REQUEST = \"FETCH_WEEEKLY_REQUEST\";\r\nexport const FETCH_WEEKLY_SUCCESS = \"FETCH_WEEKLY_SUCCESS\";\r\nexport const FETCH_WEEKLY_FAILURE = \"FETCH_WEEKLY_FAILURE\";\r\n\r\nexport const UPDATE_CURRENT_LOCATION = \"UPDATE_CURRENT_LOCATION\";\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\r\n","import {\r\n  FETCH_WEATHER_REQUEST,\r\n  FETCH_WEATHER_SUCCESS,\r\n  FETCH_WEATHER_FAILURE,\r\n  FETCH_CITY_REQUEST,\r\n  FETCH_CITY_SUCCESS,\r\n  FETCH_CITY_FAILURE,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES,\r\n  FETCH_WEEEKLY_REQUEST,\r\n  FETCH_WEEKLY_SUCCESS,\r\n  FETCH_WEEKLY_FAILURE,\r\n  UPDATE_CURRENT_LOCATION,\r\n} from \"./weatherTypes\";\r\n\r\nconst key = \"gHA6iqGvA52XLn2GWhVSUTrPWIMmHqzB\";\r\n\r\nexport const fetchCity = (city) => {\r\n  const url =\r\n    \"http://dataservice.accuweather.com/locations/v1/cities/autocomplete\";\r\n\r\n  const query = `?apikey=${key}&q=${city}`;\r\n\r\n  return (dispatch) => {\r\n    dispatch(fetchCityRequest());\r\n    fetch(url + query)\r\n      .then((response) => response.json())\r\n\r\n      .then((data) => {\r\n        // response.data is the city\r\n        const city = data[0];\r\n        let stringyCity = JSON.stringify(city);\r\n\r\n        localStorage.setItem(\"city\", stringyCity);\r\n\r\n        dispatch(fetchCitySuccess(city));\r\n        dispatch(fetchWeather(city.Key));\r\n      })\r\n\r\n      .catch((error) => {\r\n        // error.message is the error message\r\n        dispatch(fetchCityFailure(error.message));\r\n        dispatch(fetchWeather(city.Key));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchWeather = (id) => {\r\n  const url = \"http://dataservice.accuweather.com/currentconditions/v1/\";\r\n  const query = `${id}?apikey=${key}`;\r\n\r\n  return (dispatch) => {\r\n    dispatch(fetchWeatherRequest());\r\n    fetch(url + query)\r\n      .then((response) => response.json())\r\n\r\n      .then((data) => {\r\n        // response.data is the weather\r\n        const weather = data[0];\r\n        let stringyWeather = JSON.stringify(weather);\r\n        localStorage.setItem(\"weather\", stringyWeather);\r\n        dispatch(fetchWeatherSuccess(weather));\r\n        dispatch(fetchWeeklyWeather(id));\r\n      })\r\n      .catch((error) => {\r\n        // error.message is the error message\r\n        dispatch(fetchWeatherFailure(id));\r\n        dispatch(fetchWeeklyWeather(id));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchWeeklyWeather = (id) => {\r\n  const url = \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\";\r\n  const query = `${id}?apikey=${key}`;\r\n\r\n  return (dispatch) => {\r\n    dispatch(fetchWeeklyWeatherRequest());\r\n    fetch(url + query)\r\n      .then((response) => response.json())\r\n\r\n      .then((data) => {\r\n        let stringyWeeklyWeather = JSON.stringify(data);\r\n        localStorage.setItem(\"weekly\", stringyWeeklyWeather);\r\n        dispatch(fetchWeeklyWeatherSuccess(data));\r\n        dispatch(updateCurrLocation());\r\n      })\r\n      .catch((error) => {\r\n        // error.message is the error message\r\n        dispatch(fetchWeeklyWeatherFailure(error.message));\r\n        dispatch(updateCurrLocation());\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchCityRequest = () => {\r\n  return {\r\n    type: FETCH_CITY_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchCitySuccess = (city) => {\r\n  return {\r\n    type: FETCH_CITY_SUCCESS,\r\n    payload: city,\r\n  };\r\n};\r\n\r\nexport const fetchCityFailure = (error) => {\r\n  const cityStorage = JSON.parse(localStorage.getItem(\"city\"));\r\n\r\n  return {\r\n    type: FETCH_CITY_FAILURE,\r\n    payload: cityStorage,\r\n  };\r\n};\r\n\r\nexport const fetchWeatherRequest = () => {\r\n  return {\r\n    type: FETCH_WEATHER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchWeatherSuccess = (Weather) => {\r\n  return {\r\n    type: FETCH_WEATHER_SUCCESS,\r\n    payload: Weather,\r\n  };\r\n};\r\n\r\nexport const fetchWeatherFailure = (key) => {\r\n  const weatherStorage = JSON.parse(localStorage.getItem(\"weather\"));\r\n  fetchWeather(key);\r\n  return {\r\n    type: FETCH_WEATHER_FAILURE,\r\n    payload: weatherStorage,\r\n  };\r\n};\r\n\r\nexport const fetchWeeklyWeatherRequest = () => {\r\n  return {\r\n    type: FETCH_WEEEKLY_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchWeeklyWeatherSuccess = (Weather) => {\r\n  return {\r\n    type: FETCH_WEEKLY_SUCCESS,\r\n    payload: Weather,\r\n  };\r\n};\r\n\r\nexport const fetchWeeklyWeatherFailure = (error) => {\r\n  const wweeklyStorage = JSON.parse(localStorage.getItem(\"weekly\"));\r\n  return {\r\n    type: FETCH_WEEKLY_FAILURE,\r\n    payload: wweeklyStorage,\r\n  };\r\n};\r\n\r\nexport const updateCurrLocation = () => {\r\n  return {\r\n    type: UPDATE_CURRENT_LOCATION,\r\n  };\r\n};\r\n\r\nexport const addLocationToFavorites = (location) => {\r\n  return {\r\n    type: ADD_TO_FAVORITES,\r\n    payload: location,\r\n  };\r\n};\r\n\r\nexport const removeLocationFromFavorites = (location) => {\r\n  return {\r\n    type: REMOVE_FROM_FAVORITES,\r\n    payload: location,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 105,\r\n    width: \"150px\",\r\n    margin: \"10px\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction Dailyforcast({ day, index }) {\r\n  const classes = useStyles();\r\n  const [temprature, setTemprature] = useState(\"\");\r\n  const [isCelius, setIsCelsius] = useState(true);\r\n  const [weekday, setWeekday] = useState(\"\");\r\n  const dayOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\r\n\r\n  const fahrenheitToCelsius = (fahrenheit) =>\r\n    Math.floor(((fahrenheit - 32) * 5) / 9);\r\n  const celsiusToFahrenheit = (celsius) => Math.floor((celsius * 9) / 5 + 32);\r\n\r\n  useEffect(() => {\r\n    const degrees = day.Temperature.Maximum.Value;\r\n    const currDay = dayOfWeek.filter((item, i) => i === index);\r\n    setTemprature(fahrenheitToCelsius(degrees));\r\n    setWeekday(currDay);\r\n  }, []);\r\n\r\n  function changeTemprature() {\r\n    if (isCelius) {\r\n      setTemprature(celsiusToFahrenheit(temprature));\r\n      setIsCelsius(false);\r\n    } else {\r\n      setTemprature(fahrenheitToCelsius(temprature));\r\n      setIsCelsius(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {weekday}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {temprature}\r\n            {isCelius ? \"C\" : \"F\"}\r\n          </Typography>\r\n          <Button onClick={changeTemprature} color=\"primary\">\r\n            {isCelius ? \"Ferenite\" : \"Celsius\"}\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dailyforcast;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchCity,\r\n  addLocationToFavorites,\r\n  removeLocationFromFavorites,\r\n} from \"../actions/weatherActions\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Dailyforcast from \"../components/Dailyforcast\";\r\n\r\nfunction WeatherList({ wetherData, addToFavorites, removeFromFavorites }) {\r\n  const [isFav, setIsFav] = useState(false);\r\n\r\n  function toggleFavoriteLocation() {\r\n    if (isFav) {\r\n      setIsFav(false);\r\n      removeFromFavorites(wetherData.location);\r\n    } else {\r\n      setIsFav(true);\r\n\r\n      addToFavorites(wetherData.location);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        <div className=\"weather-panal\">\r\n          <header>\r\n            <section>\r\n              <h3>{wetherData.location.city.LocalizedName}</h3>\r\n              <p>\r\n                {wetherData.location.currWeather.Temperature.Metric.Value}\r\n                {wetherData.location.currWeather.Temperature.Metric.Unit}\r\n              </p>\r\n            </section>\r\n            <section>\r\n              <FavoriteIcon\r\n                style={{ color: isFav ? \"gold\" : \"black\" }}\r\n                className=\"heart\"\r\n              ></FavoriteIcon>\r\n              <Button onClick={toggleFavoriteLocation} size=\"medium\">\r\n                {isFav ? \"Remove from favorites\" : \"Add to favorites\"}\r\n              </Button>\r\n            </section>\r\n          </header>\r\n          <h1>{wetherData.location.currWeather.WeatherText}</h1>\r\n          <div className=\"daily-list\">\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              spacing={3}\r\n            >\r\n              {wetherData.location.weeklyWeather.DailyForecasts.map(\r\n                (item, index) => (\r\n                  <Dailyforcast\r\n                    key={index}\r\n                    day={item}\r\n                    index={index}\r\n                  ></Dailyforcast>\r\n                )\r\n              )}\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wetherData: state.weather,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCity: (city) => dispatch(fetchCity(city)),\r\n    addToFavorites: (location) => dispatch(addLocationToFavorites(location)),\r\n    removeFromFavorites: (location) =>\r\n      dispatch(removeLocationFromFavorites(location)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherList);\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport WeatherList from \"../containers/WeatherList\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { fetchCity } from \"../actions/weatherActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nfunction Weather({ fetchCity, wetherData }) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    // Setting default city\r\n    if (wetherData.city.Key === \"\") {\r\n      fetchCity(\"Tel Aviv\");\r\n    }\r\n  }, []);\r\n\r\n  function handleChange(e) {\r\n    let value = e.target.value;\r\n    // Only English characters\r\n    value = value.replace(/[^A-Za-z]/gi, \"\");\r\n\r\n    setValue(value);\r\n    fetchCity(e.target.value);\r\n    if (wetherData.error) {\r\n      handleOpen();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Weather\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={12}>\r\n          <h1 className=\"weather-title\">Search for locations</h1>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search..\"\r\n            name=\"search\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          />\r\n          <button onClick={handleChange}>\r\n            <SearchIcon className=\"search\"></SearchIcon>\r\n          </button>\r\n        </Grid>\r\n      </Grid>{\" \"}\r\n      <WeatherList></WeatherList>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className=\"modal-panal\">\r\n          <p>No more api requests left, wait for tomorrow</p>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wetherData: state.weather,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCity: (city) => dispatch(fetchCity(city)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  removeLocationFromFavorites,\r\n  fetchCity,\r\n} from \"../actions/weatherActions\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 175,\r\n    width: 100,\r\n    margin: \"10px\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction FavoritesList({ wetherData, removeFromFavorites }) {\r\n  const classes = useStyles();\r\n  function chooseFav(loc) {\r\n    fetchCity(loc.city.LocalizedName);\r\n  }\r\n  function removeLoc(loc) {\r\n    removeFromFavorites(loc);\r\n    console.log(\"in remove loc\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        {wetherData.favorites.length > 0 &&\r\n          wetherData.favorites.map((loc, index) => (\r\n            <Card key={index} className={classes.root}>\r\n              <div className=\"fav-header\">\r\n                <FavoriteIcon className=\"heart\"></FavoriteIcon>\r\n\r\n                <Link className=\"arrow-link\" to=\"/\">\r\n                  <ArrowForwardIcon\r\n                    onClick={() => chooseFav(loc)}\r\n                  ></ArrowForwardIcon>\r\n                </Link>\r\n              </div>\r\n\r\n              <CardContent>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  City: {loc.city.LocalizedName}\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Id: {loc.id}\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Temperature: {loc.currWeather.Temperature.Metric.Value}{\" \"}\r\n                  {loc.currWeather.Temperature.Metric.Unit}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button onClick={() => removeLoc(loc)} size=\"medium\">\r\n                  Remove from favorites\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    wetherData: state.weather,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeFromFavorites: (location) =>\r\n      dispatch(removeLocationFromFavorites(location)),\r\n    fetchCity: (city) => dispatch(fetchCity(city)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesList);\r\n","import FavoritesList from \"../containers/FavoritesList\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nfunction Favorites() {\r\n  return (\r\n    <div className=\"Favorites\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={12}>\r\n          <h1>Favorites</h1>\r\n        </Grid>\r\n      </Grid>\r\n      <FavoritesList></FavoritesList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n","import \"./App.scss\";\nimport NavBar from \"./components/NavBar\";\nimport Weather from \"./pages/Weather\";\nimport Favorites from \"./pages/Favorites\";\nimport React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    background: \"#3f51b5\",\n    marginTop: \"170px\",\n    position: \"fixed\",\n    bottom: 0,\n  },\n  link: {\n    color: \"white\",\n    background: \"none\",\n  },\n});\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar></NavBar>\n        <Switch>\n          <Route path=\"/favorites\">\n            <Favorites />\n          </Route>\n          <Route path=\"/\">\n            <Weather />\n          </Route>\n        </Switch>\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.root}\n        >\n          <Link to=\"/\">\n            <BottomNavigationAction\n              className={classes.link}\n              icon={<LocationOnIcon />}\n              inkBarStyle={{ background: \"white\" }}\n            />\n          </Link>\n\n          <Link to=\"/favorites\">\n            <BottomNavigationAction\n              className={classes.link}\n              icon={<FavoriteIcon />}\n            />\n          </Link>\n        </BottomNavigation>{\" \"}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  FETCH_WEATHER_REQUEST,\r\n  FETCH_WEATHER_SUCCESS,\r\n  FETCH_WEATHER_FAILURE,\r\n  FETCH_CITY_REQUEST,\r\n  FETCH_CITY_SUCCESS,\r\n  FETCH_CITY_FAILURE,\r\n  FETCH_WEEEKLY_REQUEST,\r\n  FETCH_WEEKLY_SUCCESS,\r\n  FETCH_WEEKLY_FAILURE,\r\n  UPDATE_CURRENT_LOCATION,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES,\r\n} from \"../actions/weatherTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  city: { Key: \"\" },\r\n  location: {\r\n    city: { Key: \"\", LocalizedName: \"\" },\r\n    currWeather: {\r\n      WeatherText: \"\",\r\n      Temperature: { Metric: { Value: \"\", Unit: \"\" } },\r\n    },\r\n    weeklyWeather: { DailyForecasts: [] },\r\n    id: \"\",\r\n  },\r\n  currWeather: {},\r\n  weeklyWeather: {},\r\n  favorites: [],\r\n  error: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CITY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case FETCH_CITY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        city: action.payload,\r\n        error: false,\r\n      };\r\n    case FETCH_CITY_FAILURE:\r\n      return {\r\n        loading: false,\r\n        ...state,\r\n        city: action.payload,\r\n        error: true,\r\n      };\r\n    case FETCH_WEATHER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case FETCH_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n\r\n        currWeather: action.payload,\r\n      };\r\n    case FETCH_WEATHER_FAILURE:\r\n      return {\r\n        ...state,\r\n        currWeather: action.payload,\r\n        error: true,\r\n      };\r\n    case FETCH_WEEEKLY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case FETCH_WEEKLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n\r\n        weeklyWeather: action.payload,\r\n      };\r\n    case FETCH_WEEKLY_FAILURE:\r\n      return {\r\n        ...state,\r\n        weeklyWeather: action.payload,\r\n        error: true,\r\n      };\r\n    case UPDATE_CURRENT_LOCATION:\r\n      return {\r\n        ...state,\r\n        location: {\r\n          city: state.city,\r\n          currWeather: state.currWeather,\r\n          weeklyWeather: state.weeklyWeather,\r\n          id: state.city.Key,\r\n        },\r\n      };\r\n    case ADD_TO_FAVORITES:\r\n      if (action.payload.id) {\r\n      }\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.payload],\r\n      };\r\n    case REMOVE_FROM_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favorites: [\r\n          ...state.favorites.filter((item) => item.id !== action.payload.id),\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}